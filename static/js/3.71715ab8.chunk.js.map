{"version":3,"sources":["Dialogs/Dialogs.module.css","Dialogs/Dialogsitem/DialogsItem.js","Dialogs/Message/Message.js","Dialogs/Dialogs.js","Dialogs/DialogsContainer.js"],"names":["module","exports","DialogsItem","props","path","id","className","s","dialog","to","name","Message","message","maxLength50","maxLength","AddMessgeReduxForm","reduxForm","form","onSubmit","handleSubmit","Field","component","Textarea","placeholder","validate","required","Dialogs","dialogsElements","dialogsPage","dialogsData","map","messagesElements","messagesData","dialogs","dialogsItem","messages","values","sendMassegeContainer","newMassegeBody","compose","connect","state","dispatch","sendMassegeCreator","withAuthRedirect"],"mappings":"2FACAA,EAAOC,QAAU,CAAC,QAAU,yBAAyB,YAAc,6BAA6B,OAAS,wBAAwB,SAAW,0BAA0B,QAAU,2B,yHCSjKC,EANK,SAACC,GACjB,IAAIC,EAAO,YAAcD,EAAME,GAC/B,OAAQ,yBAAKC,UAAWC,IAAEC,QAC1B,kBAAC,IAAD,CAASC,GAAIL,GAAOD,EAAMO,QCDfC,EAHC,SAACR,GAChB,OAAO,yBAAKG,UAAWC,IAAEK,SAAUT,EAAMS,U,QCyBpCC,EAAcC,YAAU,IAiBxBC,EAAqBC,YAAU,CAACC,KAAK,uBAAhBD,EAfL,SAACb,GACrB,OACE,0BAAMe,SAAUf,EAAMgB,cACpB,kBAACC,EAAA,EAAD,CAAOC,UAAWC,IAClBZ,KAAM,iBACNa,YAAa,0GACbC,SAAU,CAACC,IAAUZ,KAEnB,6BACE,+FAWKa,EAzCC,SAACvB,GAEjB,IAAIwB,EAAkBxB,EAAMyB,YAAYC,YAAYC,KAAI,SAAAtB,GAAM,OAAI,kBAAC,EAAD,CAAaE,KAAMF,EAAOE,KAAML,GAAIG,EAAOH,QAEzG0B,EAAmB5B,EAAMyB,YAAYI,aAAaF,KAAI,SAAAlB,GAAO,OAAG,kBAAC,EAAD,CAASA,QAASA,EAAQA,QAASP,GAAIO,EAAQP,QAM/G,OACE,yBAAKC,UAAWC,IAAE0B,SAChB,yBAAK3B,UAAWC,IAAE2B,aAAcP,GAChC,yBAAKrB,UAAWC,IAAE4B,UAAWJ,GAC7B,kBAAChB,EAAD,CAAoBG,SAPR,SAACkB,GACrBjC,EAAMkC,qBAAqBD,EAAOE,qB,uBCGnBC,4BACbC,aAdoB,SAACC,GACrB,MAAO,CACLb,YAAaa,EAAMb,gBAIE,SAACc,GACxB,MAAO,CAELL,qBAAuB,SAACC,GAAoBI,EAASC,YAAmBL,SAM1EM,IAFaL,CAIbb","file":"static/js/3.71715ab8.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__3nMwl\",\"dialogsItem\":\"Dialogs_dialogsItem__2Ugp7\",\"dialog\":\"Dialogs_dialog__I4esz\",\"messages\":\"Dialogs_messages__2xD8l\",\"message\":\"Dialogs_message__3qPKG\"};","import React from 'react';\r\nimport s from './../Dialogs.module.css';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst DialogsItem = (props) =>{\r\n    let path = \"/dialogs/\" + props.id;\r\n    return (<div className={s.dialog}>\r\n    <NavLink to={path}>{props.name}</NavLink> \r\n</div>)\r\n}\r\nexport default DialogsItem;","import React from 'react';\r\nimport s from './../Dialogs.module.css';\r\n\r\nconst Message = (props) =>{\r\n return <div className={s.message}>{props.message}</div>   \r\n}\r\nexport default Message;","import React from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { Field, reduxForm } from 'redux-form';\r\nimport { required } from '../validator/validator';\r\nimport s from './Dialogs.module.css';\r\nimport DialogsItem from './Dialogsitem/DialogsItem';\r\nimport Message from './Message/Message.js';\r\nimport {maxLength} from './../validator/validator'\r\nimport {Textarea} from './../FromsControls/FromsControls'\r\n\r\nconst Dialogs = (props) => {\r\n\r\nlet dialogsElements = props.dialogsPage.dialogsData.map(dialog => <DialogsItem name={dialog.name} id={dialog.id}/>);\r\n\r\nlet messagesElements = props.dialogsPage.messagesData.map(message =><Message message={message.message} id={message.id} />);\r\n\r\n\r\nlet addNewMessage = (values) =>{\r\nprops.sendMassegeContainer(values.newMassegeBody)\r\n}\r\n    return (\r\n      <div className={s.dialogs}>\r\n        <div className={s.dialogsItem}>{dialogsElements}</div>\r\n        <div className={s.messages}>{messagesElements}</div>\r\n        <AddMessgeReduxForm onSubmit={addNewMessage}/>\r\n      </div>\r\n    );\r\n} \r\n\r\nconst maxLength50 = maxLength(50);\r\n\r\nconst AddMessgeForm = (props)=>{\r\n  return (\r\n    <form onSubmit={props.handleSubmit}>\r\n      <Field component={Textarea} \r\n      name={'newMassegeBody'} \r\n      placeholder={'Написать соббщение'}\r\n      validate={[required, maxLength50]}\r\n      />\r\n        <div>\r\n          <button >Отправить</button>\r\n        </div>\r\n    </form>\r\n  )\r\n};\r\n\r\nconst AddMessgeReduxForm = reduxForm({form:'DailogAddMessgeForm'})(AddMessgeForm)\r\n\r\n\r\n\r\n\r\nexport default Dialogs;","import React from \"react\";\r\nimport { sendMassegeCreator} from \"../redux/dialogsReducer\";\r\nimport Dialogs from \"./Dialogs\";\r\nimport { connect } from \"react-redux\";\r\nimport {withAuthRedirect} from './../hoc/withAuthRedirect'\r\nimport { compose } from \"redux\";\r\n\r\n\r\nlet mapStateToProps = (state) => {\r\n  return {\r\n    dialogsPage: state.dialogsPage,\r\n  }\r\n};\r\n\r\nlet mapDispatchToProps = (dispatch) =>{\r\n  return {\r\n    \r\n    sendMassegeContainer:  (newMassegeBody) => {dispatch(sendMassegeCreator(newMassegeBody))},\r\n  }\r\n}\r\n\r\nexport default compose(\r\n  connect (mapStateToProps,mapDispatchToProps ),\r\n  withAuthRedirect\r\n  )\r\n (Dialogs)\r\n\r\n// let AuthRedirectConmponent = withAuthRedirect(Dialogs);\r\n\r\n\r\n// export default  connect (mapStateToProps,mapDispatchToProps ) (AuthRedirectConmponent);\r\n\r\n\r\n\r\n\r\n"],"sourceRoot":""}