{"version":3,"sources":["redux/dialogsReducer.js","Profile/Myposts/Post/Post.module.css","assets/imges/Bean Eater-0.8s-191px.svg","Users/users.module.css","assets/imges/user.jpg","login/login.module.css","api/api.js","redux/profileReducer.js","Profile/Myposts/Post/Post.js","Profile/Myposts/Myposts.js","Profile/Myposts/MypostsContainer.js","Preloader/Preloader.js","Profile/Myposts/ProfileInfo/ProfileStatus.js","Profile/Myposts/ProfileInfo/Profileinfo.js","Profile/Profile.js","Profile/ProfileContainer.js","redux/usersReducer.js","Paginator/Paginator.js","Users/User.js","Users/Users.js","Users/userReselect.js","Users/UsersContainer.js","Navbar/Navbar.js","News/News.js","Music/Music.js","Settings/Settings.js","Header/Header.js","redux/authReducer.js","Header/HeaderContainer.js","login/login.js","redux/appReducer.js","App.js","redux/redux-store.js","serviceWorker.js","index.js","validator/validator.js","FromsControls/FromsControls.js","FromsControls/FromsControls.module.css","Paginator/Paginator.module.css","Navbar/Navbar.module.css","hoc/withAuthRedirect.js","Profile/Myposts/ProfileInfo/Profileinfo.module.css","Profile/Myposts/Myposts.module.css","Header/Header.module.css"],"names":["initialState","dialogsData","id","name","messagesData","message","sendMassegeCreator","newMassegeBody","type","dialogsReducer","state","action","module","exports","instans","axios","withCredentials","baseURL","headers","getUsersAPI","currentPage","pageSize","get","then","response","data","ProfilApi","userId","getStatusAPI","updateStatusAPI","status","put","loginApi","email","password","rememberMe","post","posts","likesCount","newPostText","profile","SetStatus","profileReducer","Post","props","className","s","item","src","Myposts","React","memo","postsElements","profilePage","map","p","myposts","AddPostsFormRedux","onSubmit","values","addPostsContainer","maxLength15","maxLength","reduxForm","form","handleSubmit","Field","component","Textarea","placeholder","validate","required","MypostsContainer","connect","dispatch","addPostActionCreator","Preloader","preloader","ProfileStatus","useState","editMode","setEditMode","setStatus","useEffect","onDoubleClick","onChange","e","currentTarget","value","autoFocus","onBlur","UpdateStatus","Profileinfo","descriptionBlock","photos","large","Profile","ProfileContainer","this","match","params","authorizedUserId","history","push","GetUserProfile","GetStatus","Component","compose","auth","a","resultCode","withRouter","users","totalItemCount","isFetching","FollowingProgress","FollowSuccesses","SetUsers","SetTotalUsersCount","ToggelFetching","ToggelFetchingProgress","usersReducer","u","followed","filter","Paginator","onPageChanged","portionSize","pagesCount","Math","ceil","pages","i","portionCount","portionNumber","setPortionNumber","leftPortionPageNumber","rightPortionPageNumber","styles","paginator","onClick","cn","selectPage","pageNumber","key","User","Follow","UnFollow","user","to","small","usersPhoto","stayle","photo","disabled","some","Users","getUsersSelector","usersPage","usersPageSelector","totalUsersCountSelector","currentPageSelector","isFetchingSelector","FollowingProgressSelector","UsersContainer","SetCurrentPage","getUsers","delete","items","totalCount","withAuthRedirect","Navbar","navbar","activeClassName","active","friends","freindsItem","fItem","avatar","News","Music","Settings","Header","header","loginBlok","isAuth","login","logout","setAuthUserData","payload","getMeThunk","authReducer","HeaderContainer","maxLength50","LoginReduxForm","Input","error","messages","length","stopSubmit","_error","formData","initialized","appReducer","DialogsContainer","lazy","App","initializeApp","path","render","fallback","app","promise","Promise","all","require","createStore","combineReducers","applyMiddleware","store","dialogsPage","formReducer","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","thunkMiddleware","Boolean","location","hostname","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","console","max","undefined","input","meta","hasError","touched","formControl","mapStateToPropsForRedirect","Auth","RedirectComponet"],"mappings":"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","file":"static/js/main.8ec3136c.chunk.js","sourcesContent":["const SEND_MASSEGE = \"SEND_MASSEGE\";\r\n\r\nlet initialState = {\r\n  dialogsData: [\r\n    { id: 1, name: \"Dimych\" },\r\n    { id: 2, name: \"Andrey\" },\r\n    { id: 3, name: \"Sveta\" },\r\n    { id: 4, name: \"Sasha\" },\r\n    { id: 5, name: \"Valera\" },],\r\n  messagesData: [\r\n    { id: 1, message: \"Hi\" },\r\n    { id: 2, message: \"How are You\" },\r\n    { id: 3, message: \"Yo\" },\r\n    { id: 4, message: \"Yo\" },\r\n    { id: 5, message: \"Yo\" },],\r\n   };\r\n\r\nconst dialogsReducer = (state = initialState, action) =>{\r\n     switch(action.type) {\r\n         case \"SEND_MASSEGE\": {\r\n           return {\r\n            ...state,\r\n            messagesData: [...state.messagesData,{id: 6, message: action.newMassegeBody}],\r\n          };\r\n        }\r\n        default:\r\n        return state;\r\n     }\r\n};\r\n\r\nexport const sendMassegeCreator = (newMassegeBody) => ({ type: SEND_MASSEGE, newMassegeBody });\r\n\r\nexport default dialogsReducer;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__2uUjl\"};","module.exports = __webpack_public_path__ + \"static/media/Bean Eater-0.8s-191px.14bea6c8.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"photo\":\"users_photo__1f5CB\",\"selectPage\":\"users_selectPage__3BNj6\"};","module.exports = __webpack_public_path__ + \"static/media/user.2805b200.jpg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"oppa\":\"login_oppa__3yg2r\"};","import *as axios from \"axios\"\r\n\r\nconst instans = axios.create(\r\n    {\r\n     withCredentials: true,\r\n     baseURL: 'https://social-network.samuraijs.com/api/1.0/',\r\n     headers: {\r\n        \"API-KEY\":\"5438a20f-4bf4-4ccd-922c-e8a98513a88c\"\r\n    }\r\n});\r\n\r\nexport const getUsersAPI = (currentPage, pageSize ) => {\r\n    return instans.get(`users?page=${currentPage}&count=${pageSize}`,\r\n).then(response => response.data)\r\n}\r\n\r\nexport const UnFollowApi = (id) => {\r\n    return instans.delete(`follow/${id}`).then(response => response.data)\r\n}\r\nexport const FollowApi = (id) => {\r\n    return instans.post(`follow/${id}`,{}).then(response => response.data)\r\n}\r\nexport const ProfilApi = (userId) => {\r\n    return instans.get(`profile/`+ userId)\r\n}\r\n\r\nexport const getMe = () => {\r\n    return instans.get(`auth/me`).then(response => response.data)\r\n};\r\n\r\nexport const getStatusAPI = (userId) =>{\r\n    return instans.get(`profile/status/`+ userId)\r\n}\r\n\r\nexport const updateStatusAPI = (status) =>{\r\n    return instans.put(`profile/status`, {status})\r\n}\r\n\r\nexport const loginApi = (email, password, rememberMe) => {\r\n    return instans.post(`auth/login`,{email, password, rememberMe })\r\n};\r\nexport const logoutApi = () => {\r\n    return instans.delete(`auth/login`,)\r\n};","import {ProfilApi, getStatusAPI, updateStatusAPI} from './../api/api'\r\n\r\nconst ADD_POST = \"ADD-POST\";\r\nconst SET_USER_PROFILE = \"SET_USER_PROFILE\";\r\nconst SET_STATUS = \"SET_STATUS\";\r\n\r\nlet initialState = {\r\n  posts: [\r\n    { id: 1, message: \"Hi, how are you?\", likesCount: 12 },\r\n    { id: 2, message: \"Hi\", likesCount: 11 },],\r\n  newPostText: \"It-kamasutra.com\",\r\n  profile: null,\r\n  status: \"\"\r\n}\r\n \r\n\r\nconst profileReducer = (state = initialState, action) => {\r\n  switch (action.type){\r\n      case 'ADD-POST': {\r\n        return {\r\n          ...state,\r\n          posts: [...state.posts, {id: 3,message: action.newPostText, likesCount: 0}],\r\n        };\r\n      }\r\n      case 'SET_USER_PROFILE' :{\r\n        return{...state, profile: action.profile};\r\n      }\r\n      case 'SET_STATUS' :{\r\n        return{...state, status: action.status};\r\n      }\r\n    default:\r\n        return state;\r\n  } \r\n};\r\n\r\nexport const addPostActionCreator = (newPostText) => ({ type: ADD_POST, newPostText });\r\nexport const SetUserProfile = (profile) => ({ type: SET_USER_PROFILE, profile });\r\nexport const SetStatus = (status) => ({ type: SET_STATUS, status });\r\n\r\n\r\nexport const GetUserProfile = (userId) => {\r\n  return async (dispatch)=>{\r\n   let response = await ProfilApi(userId);\r\n      dispatch(SetUserProfile(response.data))\r\n  }\r\n}\r\n\r\nexport const GetStatus = (userId) => {\r\n  return async (dispatch)=>{\r\n   let response = await getStatusAPI(userId);\r\n      dispatch(SetStatus(response.data))\r\n  }\r\n}\r\nexport const UpdateStatus = (status) => {\r\n  return async (dispatch)=>{\r\n  let response = await  updateStatusAPI(status);\r\n      if (response.data.resultCode === 0) {dispatch(SetStatus(status))}\r\n  }\r\n}\r\n\r\n\r\nexport default profileReducer;\r\n","import React from 'react';\nimport s from './Post.module.css';\n\nconst Post = (props) => {\n  return (\n    <div>\n     <div className={s.item}>\n       <img src='https://i.pinimg.com/736x/98/51/b8/9851b8ab5b3e8e1446ceb3493da7c64a--i-love-coffee-cartoon-cats.jpg'/>\n     {props.message}\n     </div>\n     <span>Like</span>\n    </div>)\n}\nexport default Post;\n","import React from 'react';\nimport { Field, reduxForm } from 'redux-form';\nimport s from './Myposts.module.css';\nimport Post from './Post/Post';\nimport {maxLength, required} from './../../validator/validator';\nimport {Textarea} from './../../FromsControls/FromsControls'\nimport { Component } from 'react';\n\n\nconst Myposts = React.memo( props =>{\n\n   let postsElements = props.profilePage.posts.map( p => <Post message = {p.message} likesCount={p.likesCount}/>);\n   let addPosts = (values) => {\n   props.addPostsContainer(values.newPostText);\n   // props.dispatch(addPostActionCreator());\n};\n  return (\n     <div className={s.myposts}>\n       <h3>My posts</h3>\n          <AddPostsFormRedux onSubmit={addPosts}/>\n       <div className={s.post}>\n          {postsElements}\n       </div>\n     </div>\n     )\n});\n\nconst maxLength15 = maxLength(15);\n\nconst AddPostsForm = (props) => {\n   return ( \n      <form onSubmit={props.handleSubmit}>\n   <div>\n      <Field component={Textarea} name={'newPostText'} placeholder={'Post message'}\n       validate={[required, maxLength15]}/>\n          </div>\n       <div>\n          <button>Add Post</button>\n       </div>\n      </form>\n   )\n};\n\nconst AddPostsFormRedux = reduxForm({form:\"PostAddPostsForm\"})(AddPostsForm);\n\nexport default Myposts;\n\n\n","import React from 'react';\nimport {addPostActionCreator, updateNewPostTextActionCreator} from './../../redux/profileReducer';\nimport Myposts from './Myposts';\nimport { connect } from 'react-redux';\n\n\n\nlet mapStateToProps = (state) => {\n  return {\n    profilePage: state.profilePage\n  }\n}\n let mapDispatchToProps = (dispatch)=>{\n  return {\n    addPostsContainer: (newPostText) =>{dispatch(addPostActionCreator(newPostText))},\n  }\n }\n\n const MypostsContainer = connect (mapStateToProps,mapDispatchToProps )(Myposts);\n\n export default MypostsContainer;","import preloader from '../assets/imges/Bean Eater-0.8s-191px.svg';\r\nimport React from 'react'\r\n\r\nlet Preloader = () => {\r\n    return <div><img src={preloader} /></div>\r\n}\r\n\r\nexport default Preloader;","import React, { useEffect, useState } from 'react';\nimport s from './Profileinfo.module.css';\n\nconst  ProfileStatus = (props) => {\n \nlet [editMode, setEditMode]  = useState(false);\nlet [status, setStatus] = useState(props.status)\n \n\nuseEffect( ()=>{\n  setStatus(props.status)\n}, [props.status]);\n\n\nconst ActivateMode = () => {\n  setEditMode(true)\n } \n const DeActivateMode = () =>{\n  setEditMode(false)\n  props.UpdateStatus(status);\n} \nconst OnStatusChange = (e)=>{\n  setStatus(e.currentTarget.value)\n}\n\n    return (\n    <div>\n          <div>\n            {!editMode &&\n              <span onDoubleClick={ActivateMode}>{props.status  || \"------\"}</span>\n            } \n          </div>\n          <div>\n            {editMode &&\n              <input onChange={OnStatusChange} autoFocus={true} onBlur={DeActivateMode} value={status} />\n            } \n          </div>\n    </div>)\n\n}\nexport default ProfileStatus;\n","import React from 'react';\nimport Preloader from '../../../Preloader/Preloader';\nimport s from './Profileinfo.module.css';\nimport ProfileStatus from './ProfileStatus';\n\nconst Profileinfo = (props) => {\nif (!props.profile){\n  return <Preloader/>\n}\n  return (\n    <div >\n     <div className={s.descriptionBlock}>\n       <img src={props.profile.photos.large} />\n       <ProfileStatus status={props.status} UpdateStatus={props.UpdateStatus} />\n       ava + description\n    </div>\n    </div>)\n}\nexport default Profileinfo;\n","import React from \"react\";\nimport MypostsContainer from \"./Myposts/MypostsContainer\";\nimport Profileinfo from \"./Myposts/ProfileInfo/Profileinfo\";\n\n\nconst Profile = (props) => {\n  return (\n    <div>\n      <Profileinfo profile={props.profile} status={props.status} UpdateStatus={props.UpdateStatus}/>\n      <MypostsContainer/>\n    </div>\n  );\n};\nexport default Profile;\n","import {connect} from 'react-redux'\nimport React from \"react\";\nimport Profile from './Profile'\nimport {GetUserProfile, GetStatus, UpdateStatus} from './../redux/profileReducer'\nimport { withRouter } from 'react-router-dom';\nimport { withAuthRedirect } from '../hoc/withAuthRedirect';\nimport { compose } from 'redux';\n\n\nclass ProfileContainer extends React.Component {\n  componentDidMount(){\n    let userId = this.props.match.params.userId;\n    if (!userId) {\n      // userId = 13494;\n      userId = this.props.authorizedUserId;\n      if (!userId) {this.props.history.push('/login')}\n    }\n    this.props.GetUserProfile(userId);\n    this.props.GetStatus(userId);\n  }\n  render(){\nreturn (<Profile {...this.props} profile={this.props.profile} status={this.props.status} \n        UpdateStatus={this.props.UpdateStatus}/>)\n  }\n};\n\n  let mapStateToProps = (state) => ({\n  profile: state.profilePage.profile,\n  status: state.profilePage.status,\n  authorizedUserId: state.auth.userId\n}); \n\nexport default compose(\n  connect(mapStateToProps, {GetUserProfile, GetStatus, UpdateStatus}), withRouter)(ProfileContainer)\n\n// let AuthRedirectConmponent = withAuthRedirect(ProfileContainer);\n\n\n// let WithUrlDataContainerComponent = withRouter(AuthRedirectConmponent);\n\n// export default connect(mapStateToProps, {GetUserProfile}) (WithUrlDataContainerComponent);\n","import {getUsersAPI, FollowApi, UnFollowApi} from './../api/api';\r\n\r\nconst FOLLOW = \"FOLLOW\";\r\nconst UnFOLLOW = \"UnFOLLOW\";\r\nconst Set_Users = \"Set_Users\";\r\nconst Set_Current_Page = \"Set_Current_Page\";\r\nconst Set_Total_Users_Count = \"Set_Total_Users_Count\";\r\nconst Toggel_Fetching = \"Toggel_Fetching\";\r\nconst Toggel_Fetching_Progress = \"Toggel_Fetching_Progress\";\r\n\r\nlet initialState = {\r\n  users: [ ],\r\n  pageSize: 10,\r\n  totalItemCount: 0,\r\n  currentPage: 1,\r\n  isFetching: false,\r\n  FollowingProgress: [],\r\n};\r\n  \r\n\r\nconst usersReducer = (state = initialState, action) => {\r\n  switch (action.type){\r\n      case 'FOLLOW': {\r\n        return {\r\n          ...state,\r\n          users: state.users.map( u => {\r\n            if (u.id  === action.userId) {\r\n              return{...u,followed: true}\r\n            }\r\n            return u;\r\n          })\r\n      }\r\n    }\r\n      case 'UnFOLLOW': {\r\n        return {\r\n          ...state,\r\n          users: state.users.map( u => {\r\n            if (u.id  === action.userId) {\r\n              return{...u,followed: false}\r\n            }\r\n            return u;\r\n          })\r\n      }\r\n    }\r\n    case 'Set_Users': {\r\n      return{...state, users: [...action.users]}\r\n    }\r\n    case 'Set_Current_Page': {\r\n      return{...state, currentPage: action.currentPage}\r\n    }\r\n    case 'Set_Total_Users_Count': {\r\n      return{...state, totalItemCount: action.totalItemCount}\r\n    }\r\n    case 'Toggel_Fetching': {\r\n      return{...state, isFetching: action.isFetching}\r\n    }\r\n    case 'Toggel_Fetching_Progress': {\r\n      return{\r\n        ...state,\r\n        FollowingProgress: action.isFetching \r\n        ? [...state.FollowingProgress, action.userId]\r\n        : state.FollowingProgress.filter(id => id != action.userId)\r\n      }\r\n    }\r\n\r\n    default: \r\n          return state;\r\n  } \r\n};\r\n\r\nexport const FollowSuccesses = (userId) => ({ type: FOLLOW, userId });\r\nexport const UnFollowSuccesses = (userId) => ({type: UnFOLLOW, userId});\r\nexport const SetUsers = (users) => ({type: Set_Users, users});\r\nexport const SetCurrentPage = (currentPage) => ({type: Set_Current_Page, currentPage});\r\nexport const SetTotalUsersCount = (totalItemCount) => ({type: Set_Total_Users_Count, totalItemCount});\r\nexport const ToggelFetching = (isFetching) => ({type: Toggel_Fetching,isFetching});\r\nexport const ToggelFetchingProgress = (isFetching, userId) => ({type: Toggel_Fetching_Progress, isFetching, userId});\r\n\r\n\r\nexport const getUsers = (currentPage, pageSize) =>{\r\n  return async (dispatch) => {\r\n    dispatch(ToggelFetching(true));\r\n   let data = await getUsersAPI(currentPage, pageSize);\r\n          dispatch(ToggelFetching(false));\r\n          dispatch(SetUsers(data.items));\r\n          dispatch(SetTotalUsersCount(data.totalCount));\r\n  }\r\n};\r\n\r\nexport const Follow =(userId)=>{\r\n  return async (dispatch) =>{\r\n    dispatch(ToggelFetchingProgress(true, userId))\r\n  let data = await FollowApi(userId);\r\n          if(data.resultCode === 0){\r\n            dispatch(FollowSuccesses(userId))\r\n          }\r\n          dispatch(ToggelFetchingProgress(false, userId))\r\n  }\r\n}\r\nexport const UnFollow =(userId)=>{\r\n  return async (dispatch) =>{\r\n    dispatch(ToggelFetchingProgress(true, userId))\r\n   let data = await UnFollowApi(userId);\r\n          if(data.resultCode === 0){\r\n            dispatch(UnFollow(userId))}\r\n            dispatch(ToggelFetchingProgress(false, userId))\r\n  }\r\n}\r\n\r\n\r\nexport default usersReducer;\r\n","import React from \"react\";\r\nimport  { useState } from \"react\";\r\nimport styles from './Paginator.module.css';\r\nimport cn from \"classnames\"\r\n\r\n\r\n\r\nconst Paginator = ({totalItemCount,pageSize, currentPage,onPageChanged, portionSize = 10  }) => {\r\n    \r\n    let pagesCount = Math.ceil(totalItemCount / pageSize);\r\n    let pages = [];\r\n    \r\n    for (let i = 1; i <= pagesCount; i++){\r\n        pages.push(i);\r\n    };\r\n\r\nlet portionCount = Math.ceil(pagesCount / portionSize);\r\nlet [portionNumber, setPortionNumber] = useState(1);\r\nlet leftPortionPageNumber = (portionNumber - 1) * portionSize + 1;\r\nlet rightPortionPageNumber = portionNumber*portionSize;\r\n\r\n\r\n\r\n    return  <div className={styles.paginator}>\r\n{portionNumber > 1 && \r\n<button onClick={()=>{setPortionNumber(portionNumber - 1)}}>PREV</button>}\r\n\r\n        {pages\r\n        .filter(p=>p >= leftPortionPageNumber && p<= rightPortionPageNumber)\r\n        .map( (p) => {\r\n            return <span className={cn({\r\n                [styles.selectPage] : currentPage === p}, styles.pageNumber)}\r\n                key={p}\r\n            onClick = { (e) =>{\r\n                onPageChanged(p); \r\n                }}>{p}</span> \r\n        } )}\r\n      {portionCount > portionNumber && \r\n<button onClick={()=>{setPortionNumber(portionNumber + 1)}}>NEXT</button>}\r\n    </div>}\r\n\r\n\r\nexport default Paginator;","import React from \"react\";\r\nimport stayle from './users.module.css'\r\nimport usersPhoto from './../assets/imges/user.jpg';\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nconst User = ({FollowingProgress, Follow, UnFollow , user}) => {\r\n    return( <div>\r\n            <span>\r\n                <div>\r\n                    <NavLink to={'./profile/' + user.id}>\r\n                    <img src={user.photos.small != null ? user.photos.small : usersPhoto } className={stayle.photo}/>\r\n                    </NavLink>\r\n                    \r\n                </div>\r\n                <div>\r\n                    {user.followed ? <button disabled={FollowingProgress.some(id=> id === user.id)} \r\n                            onClick={()=>{UnFollow(user.id);\r\n                        }}>UnFollow</button>: \r\n                    <button disabled={FollowingProgress.some(id=> id === user.id)} \r\n                            onClick={()=>{Follow(user.id)\r\n                                  }}>Follow</button>}\r\n                </div>\r\n            </span>\r\n            <span>\r\n                <span>\r\n                    <div>{user.name}</div>\r\n                    <div>{user.status}</div>\r\n                </span>\r\n                <span>\r\n                    {/* <div>{u.location.country}</div>\r\n                    <div>{u.location.city}</div> */}\r\n\r\n                </span>\r\n            </span>\r\n\r\n        </div>)\r\n}\r\n\r\nexport default User;","import React from \"react\";\r\nimport Paginator from './../Paginator/Paginator'\r\nimport User from \"./User\";\r\n\r\nconst Users = (props) => {\r\n    return <div>\r\n<Paginator totalItemCount={props.totalItemCount} pageSize={props.pageSize} currentPage={props.currentPage} onPageChanged={props.onPageChanged}/>\r\n    {\r\n        props.users.map( u=> <User user={u} FollowingProgress={props.FollowingProgress} \r\n            UnFollow={props.UnFollow}\r\n            Follow={props.Follow}\r\n            key={u.id}\r\n        /> )\r\n}\r\n</div>\r\n}\r\n\r\nexport default Users;","\r\n\r\nexport const getUsersSelector = (state)=>{\r\n    return state.usersPage.users;\r\n}\r\nexport const usersPageSelector = (state)=>{\r\n    return state.usersPage.pageSize;\r\n}\r\nexport const totalUsersCountSelector = (state)=>{\r\n    return state.usersPage.totalItemCount;\r\n}\r\nexport const currentPageSelector = (state)=>{\r\n    return state.usersPage.currentPage;\r\n}\r\nexport const isFetchingSelector = (state)=>{\r\n    return state.usersPage.isFetching;\r\n}\r\nexport const FollowingProgressSelector = (state)=>{\r\n    return state.usersPage.FollowingProgress;\r\n}\r\n\r\n","import React from 'react'\r\nimport {connect} from 'react-redux'\r\nimport {Follow, UnFollow, SetUsers, \r\n  SetCurrentPage, SetTotalUsersCount, ToggelFetching, getUsers} from './../redux/usersReducer'\r\nimport Users from './Users';\r\nimport Preloader from '../Preloader/Preloader'\r\nimport { compose } from 'redux';\r\nimport { withAuthRedirect } from '../hoc/withAuthRedirect';\r\nimport {getUsersSelector,usersPageSelector, totalUsersCountSelector,\r\n  currentPageSelector, isFetchingSelector, FollowingProgressSelector } from './userReselect'\r\n\r\nclass UsersContainer extends React.Component {\r\n\r\n  componentDidMount(){\r\n    this.props.getUsers(this.props.currentPage, this.props.pageSize);\r\n  }\r\n\r\nonPageChanged = (pageNumber) => {\r\n    this.props.SetCurrentPage(pageNumber);\r\n    this.props.getUsers(pageNumber, this.props.pageSize)\r\n}\r\n\r\nrender() {\r\n  return <> \r\n  {this.props.isFetching ? \r\n  <Preloader /> : null }\r\n\r\n\r\n  <Users totalItemCount={this.props.totalItemCount} \r\n          pageSize={this.props.pageSize}\r\n          currentPage= {this.props.currentPage}\r\n          onPageChanged={this.onPageChanged}\r\n          users={this.props.users}\r\n          UnFollow={this.props.UnFollow}\r\n          Follow={this.props.Follow}\r\n          FollowingProgress={this.props.FollowingProgress}\r\n  />\r\n</>\r\n}\r\n}  \r\n\r\nlet mapStateToProps = (state) => {\r\n  return {\r\n    users: getUsersSelector(state),\r\n    pageSize: usersPageSelector(state),\r\n    totalItemCount: totalUsersCountSelector(state),\r\n    currentPage: currentPageSelector(state),\r\n    isFetching: isFetchingSelector(state),\r\n    FollowingProgress: FollowingProgressSelector(state)\r\n  };\r\n};\r\n\r\n\r\nexport default compose(\r\n  connect (mapStateToProps,{Follow, UnFollow, SetUsers, SetCurrentPage, SetTotalUsersCount, \r\n    ToggelFetching, getUsers}),\r\n    withAuthRedirect)\r\n  (UsersContainer)\r\n\r\n\r\n// export default connect (mapStateToProps,{\r\n//   Follow, UnFollow, SetUsers, \r\n//   SetCurrentPage, SetTotalUsersCount, ToggelFetching, getUsers\r\n//   }) (UsersContainer);;","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport s from './Navbar.module.css';\n\nconst Navbar = () => {\n  return (\n    <nav className = {s.navbar}>\n      <div className= {s.item}>\n        <NavLink to =\"/Profile\" activeClassName= {s.active}>Profile</NavLink>\n      </div>\n      <div className= {s.item}>\n        <NavLink to = \"/Dialogs\" activeClassName= {s.active}>Massages</NavLink>\n      </div>\n      <div className= {s.item}>\n        <NavLink to = \"/News\" activeClassName= {s.active}>News</NavLink>\n      </div>\n      <div className= {s.item}>\n         <NavLink to = \"/Music\" activeClassName= {s.active}>Music</NavLink>\n      </div>\n      <div className= {s.item}>\n         <NavLink to = \"/Settings\" activeClassName= {s.active}>Settings</NavLink>\n      </div>\n      <div className= {s.item}>\n         <NavLink to = \"/Users\" activeClassName= {s.active}>Users</NavLink>\n      </div>\n      <div className={s.friends}>\n        <h2>Friends</h2>\n        <div className={s.freindsItem}>\n            <div className={s.fItem}>\n                <NavLink to= \"/Sasha\" activeClassName= {s.active}> Sasha</NavLink>\n                <div className={s.avatar}>\n                <img src='https://i.pinimg.com/736x/98/51/b8/9851b8ab5b3e8e1446ceb3493da7c64a--i-love-coffee-cartoon-cats.jpg'/>\n                </div>\n            </div>\n            <div className={s.fItem}>\n                <NavLink to= \"/Sveta\" activeClassName= {s.active}> Sveta</NavLink>\n                <div className={s.avatar}>\n                <img src='https://i.pinimg.com/736x/98/51/b8/9851b8ab5b3e8e1446ceb3493da7c64a--i-love-coffee-cartoon-cats.jpg'/>\n                </div>\n            </div>\n            <div className={s.fItem}>\n                <NavLink to= \"/Dimych\" activeClassName= {s.active}> Dimych</NavLink>\n                <div className={s.avatar}>\n                <img src='https://i.pinimg.com/736x/98/51/b8/9851b8ab5b3e8e1446ceb3493da7c64a--i-love-coffee-cartoon-cats.jpg'/>\n                </div>\n            </div>\n        </div>\n      </div>\n    </nav> \n    \n    )\n}\nexport default Navbar;\n","import React from 'react';\r\nimport s from './News.module.css';\r\n\r\nconst News = (props) => {\r\n    return(\r\n    <div>\r\n    News\r\n    </div>)\r\n} \r\nexport default News;","import React from 'react';\r\nimport s from './Music.module.css';\r\n\r\nconst Music = (props) => {\r\n    return(\r\n    <div>\r\n    Music\r\n    </div>)\r\n} \r\nexport default Music;","import React from 'react';\r\nimport s from './Settings.module.css';\r\n\r\nconst Settings = (props) => {\r\n    return(\r\n    <div>\r\n    Settings\r\n    </div>)\r\n} \r\nexport default Settings;","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport s from './Header.module.css';\n\nconst Header = (props) => {\n  return (\n    <header className = {s.header}>\n     <img src = \"https://www.studioadhoc.de/wp-content/uploads/2013/04/TYPO_Berlin_2008_img_Logo.png\" />\n\n<div className={s.loginBlok}>\n\n  {props.isAuth\n    ?  <div>{props.login} - <button onClick={props.logout}>Log Out</button></div>\n    :<NavLink to={'/login'}>Login</NavLink>}\n</div>\n    \n    </header>)\n}\nexport default Header;\n","import { stopSubmit } from 'redux-form';\r\nimport {getMe, loginApi, logoutApi} from './../api/api'\r\nconst SET_USER_DATA = \"SET_USER_DATA\";\r\n\r\n\r\nlet initialState = {\r\n  userId: null,\r\n  email: null,\r\n  login: null,\r\n  isAuth: false\r\n};\r\n  \r\n\r\nconst authReducer = (state = initialState, action) => {\r\n  switch (action.type){\r\n      case 'SET_USER_DATA': {\r\n        return {\r\n          ...state,\r\n          ...action.payload,\r\n          }\r\n      }\r\n\r\n    default: \r\n          return state;\r\n  } \r\n};\r\n\r\nexport const setAuthUserData = (userId, email, login, isAuth) => ({ type: SET_USER_DATA, payload: {userId, email, login, isAuth} });\r\n\r\nexport const getMeThunk = () =>{\r\n  return async (dispatch)=>{ \r\n      let data = await getMe();\r\n      if(data.resultCode === 0){\r\n        let {id, login, email} = data.data;\r\n        dispatch(setAuthUserData(id, email, login, true));\r\n      }\r\n        }\r\n  }\r\nexport const login = (email, password, rememberMe) =>{\r\n  return async (dispatch)=>{\r\n   let response = await loginApi(email, password, rememberMe);\r\n      if(response.data.resultCode === 0){\r\n        dispatch(getMeThunk());\r\n      } else {\r\n        let message = response.data.messages.length > 0 ? response.data.messages[0] : \"Some error\";\r\n        dispatch(stopSubmit(\"Login\", { _error: message}));\r\n      }\r\n  }\r\n}\r\nexport const logout = () =>{\r\n  return async (dispatch)=>{\r\n  let response = await  logoutApi();\r\n      if(response.data.resultCode === 0){\r\n        dispatch(setAuthUserData(null, null, null, false));\r\n      }\r\n  }\r\n}\r\n\r\nexport default authReducer;\r\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport Header from './Header';\nimport {getMeThunk, logout } from './../redux/authReducer';\n\nclass HeaderContainer extends React.Component {\n  \n  componentDidMount(){\n  }\n  \n  render(){\n    return <Header {...this.props}/>\n  }\n};\nlet mapStateToProps =(state)=>({\nisAuth: state.auth.isAuth,\nlogin: state.auth.login\n})\nexport default connect(mapStateToProps, { logout }) (HeaderContainer);\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { Field, reduxForm } from 'redux-form';\r\nimport { Input } from '../FromsControls/FromsControls';\r\nimport { maxLength, required } from '../validator/validator';\r\nimport {login } from './../redux/authReducer';\r\nimport {s} from './login.module.css'\r\n\r\nconst maxLength50 = maxLength(50);\r\nconst LoginForm = (props) => {\r\n    \r\n    return(\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field placeholder={'email'} \r\n                name={'email'} \r\n                component={Input} \r\n                validate={[required, maxLength50]}\r\n                />\r\n            </div>\r\n            <div>\r\n                <Field placeholder={'password'} \r\n                name={'password'} \r\n                component={Input}\r\n                validate={[required, maxLength50]}\r\n                type={\"password\"}/>\r\n            </div>\r\n            <div>\r\n                <Field type={'checkbox'} name={'rememberMe'} component={Input}/> remember me\r\n            </div>\r\n            {props.error && <div>\r\n                    {props.error}\r\n                    </div> }\r\n            <button>Login</button>\r\n        </form>\r\n    )\r\n};\r\n\r\n\r\nconst LoginReduxForm = reduxForm({form: 'Login'})(LoginForm)\r\n\r\nconst Login = (props) => {\r\n\r\nconst onSubmit = (formData)=>{\r\n        props.login(formData.email, formData.password, formData.rememberMe )\r\n}\r\n\r\nif (props.isAuth){\r\n    return <Redirect to={'/profile'}/>\r\n}\r\n\r\n    return(<div>\r\n            <h1> Login </h1>\r\n            <LoginReduxForm onSubmit={onSubmit}/>\r\n    </div>\r\n    )\r\n};\r\nconst mapStateToProps = (state)=>({\r\n    isAuth: state.auth.isAuth\r\n})\r\n\r\nexport default connect(mapStateToProps, {login}) (Login);","import {getMeThunk} from './authReducer'\r\n\r\nconst INITIALIZED_SUCCESS = \"INITIALIZED_SUCCESS\";\r\n\r\n\r\nlet initialState = {\r\n  initialized: false,\r\n};\r\n  \r\n\r\nconst appReducer = (state = initialState, action) => {\r\n  switch (action.type){\r\n      case 'INITIALIZED_SUCCESS': {\r\n        return {\r\n          ...state,\r\n          initialized: true,\r\n          }\r\n      }\r\n    default: \r\n          return state;\r\n  } \r\n};\r\n\r\nexport const initializedSuccess = () => ({ type: INITIALIZED_SUCCESS });\r\n\r\nexport const initializeApp = () =>{\r\n  return (dispatch) => {\r\n   let promise = dispatch(getMeThunk());\r\n  \r\n   Promise.all([promise])\r\n   .then(()=>{\r\n    dispatch(initializedSuccess());\r\n   });\r\n  }\r\n}\r\n\r\n\r\nexport default appReducer;\r\n","import React, { Suspense } from 'react';\nimport \"./App.css\";\nimport ProfileContainer from \"./Profile/ProfileContainer\";\nimport UsersContainer from './Users/UsersContainer';\nimport Navbar from \"./Navbar/Navbar\";\nimport News from \"./News/News\";\nimport Music from \"./Music/Music\";\nimport Settings from \"./Settings/Settings\";\nimport { BrowserRouter, Route, withRouter } from \"react-router-dom\";\nimport HeaderContainer from \"./Header/HeaderContainer\";\nimport Login from \"./login/login\";\nimport { compose } from \"redux\";\nimport { connect } from \"react-redux\";\nimport {initializeApp} from './redux/appReducer'\nimport Preloader from \"./Preloader/Preloader\";\n\n// import DialogsContainer from \"./Dialogs/DialogsContainer\";\nconst DialogsContainer = React.lazy(() => import('./Dialogs/DialogsContainer'));\n\n\nclass App extends React.Component {\n  componentDidMount(){\n    this.props.initializeApp();\n  }\nrender(){\n  if(!this.props.initialized) {\n    return <Preloader/>\n  }\n  return (\n\n      <div className=\"App\">\n        <HeaderContainer />\n        <Navbar />\n        <div className=\"app-wrapper-content\">\n          <Route path='/profile/:userId?' render={() => ( <ProfileContainer />)} />\n          <Route path='/news' render={() => <News />} />\n          <Route path='/music' render={() => <Music />} />\n          <Route path='/settings' render={() => <Settings />} />\n          <Route path='/users' render={() => ( <UsersContainer />)} />\n          <Route path='/login' render={()=> (<Login/>)} />\n\n\n          <Route path='/dialogs' render={() => {\n             return <Suspense fallback={<div>Загрузка...</div>}>\n                    <DialogsContainer />\n                    </Suspense>\n          }} />\n\n\n        </div>\n      </div>\n  );\n}\n}\nconst mapStateToProps = (state) => ({\n  initialized: state.app.initialized\n});\n\nexport default compose(\n  withRouter, \n  connect(mapStateToProps, { initializeApp })) (App);\n","const { createStore, combineReducers, applyMiddleware,compose } = require(\"redux\");\r\n// eslint-disable-next-line import/first\r\nimport authReducer from \"./authReducer\";\r\n// eslint-disable-next-line import/first\r\nimport dialogsReducer from \"./dialogsReducer\";\r\n// eslint-disable-next-line import/first\r\nimport profileReducer from \"./profileReducer\";\r\n// eslint-disable-next-line import/first\r\nimport usersReducer from \"./usersReducer\";\r\n// eslint-disable-next-line import/first\r\nimport thunkMiddleware from 'redux-thunk';\r\n// eslint-disable-next-line import/first\r\nimport { reducer as formReducer } from 'redux-form';\r\n// eslint-disable-next-line import/first\r\nimport appReducer from \"./appReducer\"\r\n\r\nlet reducers = combineReducers({\r\n    profilePage: profileReducer,\r\n    dialogsPage: dialogsReducer,\r\n    usersPage: usersReducer,\r\n    auth: authReducer,\r\n    form: formReducer,\r\n    app: appReducer\r\n});\r\n\r\n// Подключение Redux DevTools\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst store = createStore(reducers, /* preloadedState, */ composeEnhancers(applyMiddleware(thunkMiddleware)));\r\n\r\n\r\n\r\n// let store = createStore(reducers, applyMiddleware(thunkMiddleware));\r\n\r\nwindow.store = store;\r\n\r\n\r\nexport default store;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css';\nimport store from './redux/redux-store';\nimport * as serviceWorker from './serviceWorker';\nimport {Provider} from 'react-redux';\nimport { HashRouter} from \"react-router-dom\";\n\n// let rerenderEntireTree = (state) => {\n  ReactDOM.render(\n    <React.StrictMode>\n          <HashRouter>\n      <Provider store={store}>\n        <App />\n      </Provider>\n      </HashRouter>\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n  );\n// };\n\n// rerenderEntireTree(store.getState());\n\n// store.subscribe(()=>{\n//   let state = store.getState();\n//   rerenderEntireTree(state)\n// });\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","\r\n  export const required = value => {\r\n    if (value) return undefined;\r\n    return \"Field is required\"\r\n}\r\n\r\nexport const maxLength = max => value =>\r\n  value && value.length > max ? `Must be ${max} characters or less` : undefined\r\n\r\n\r\n\r\n","import React from 'react'\r\nimport styles from './FromsControls.module.css'\r\n\r\nexport const Textarea =({input, meta, ...props}) =>{\r\n    const hasError = meta.touched && meta.error\r\n    return (\r\n        <div className={styles.formControl + \" \" +(hasError ? styles.error : \"\")}>\r\n            <textarea {...input} {...props}/>\r\n            {hasError && <span>{meta.error}</span>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport const Input =({input, meta, ...props}) =>{\r\n    const hasError = meta.touched && meta.error\r\n    return (\r\n        <div className={styles.formControl + \" \" +(hasError ? styles.error : \"\")}>\r\n            <input {...input} {...props}/>\r\n            {hasError && <span>{meta.error}</span>}\r\n        </div>\r\n    )\r\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"error\":\"FromsControls_error__3ejVw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"paginator\":\"Paginator_paginator__pPPzk\",\"pageNumber\":\"Paginator_pageNumber__CrWtU\",\"selectPage\":\"Paginator_selectPage__23p3B\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"navbar\":\"Navbar_navbar__2_wdr\",\"item\":\"Navbar_item__2Yyto\",\"active\":\"Navbar_active__1MPsn\",\"freindsItem\":\"Navbar_freindsItem__2OX9W\",\"fItem\":\"Navbar_fItem__1uDDs\",\"avatar\":\"Navbar_avatar__2_59B\"};","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nlet mapStateToPropsForRedirect = (state) =>({\r\n    Auth: state.auth.isAuth\r\n})\r\n\r\nexport const  withAuthRedirect =(Component) =>{\r\n   \r\n   \r\n    class RedirectComponet extends React.Component {\r\n        render() {\r\n            if (!this.props.Auth) return <Redirect to='./login'/>\r\n            return <Component {...this.props}/>\r\n    }\r\n}\r\n\r\n    let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponet)\r\n        return ConnectedAuthRedirectComponent\r\n\r\n}\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"descriptionBlock\":\"Profileinfo_descriptionBlock__3lTHm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"myposts\":\"Myposts_myposts__2Ejxy\",\"post\":\"Myposts_post__1iJzc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__2KD0q\",\"loginBlok\":\"Header_loginBlok__b_t7E\"};"],"sourceRoot":""}